{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\CongestionLevelOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/CongestionLevelOrder.css\"; // CSS 파일 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleData = [{\n  id: 1,\n  name: \"Location A\",\n  Acongestion: \"10\",\n  Bcongestion: \"10\"\n}, {\n  id: 2,\n  name: \"Location B\",\n  Acongestion: \"9\",\n  Bcongestion: \"6\"\n}, {\n  id: 3,\n  name: \"Location C\",\n  Acongestion: \"8\",\n  Bcongestion: \"7\"\n}, {\n  id: 4,\n  name: \"Location D\",\n  Acongestion: \"6\",\n  Bcongestion: \"1\"\n}, {\n  id: 5,\n  name: \"Location E\",\n  Acongestion: \"5\",\n  Bcongestion: \"4\"\n}, {\n  id: 6,\n  name: \"Location F\",\n  Acongestion: \"2\",\n  Bcongestion: \"5\"\n}];\nconst CongestionLevelOrder = () => {\n  _s();\n  const [sortedData, setSortedData] = useState([...sampleData]);\n  const handleSort = type => {\n    const sorted = [...sampleData].sort((a, b) => {\n      if (type === \"adult\") {\n        return parseInt(a.Acongestion) - parseInt(b.Acongestion);\n      } else {\n        return parseInt(a.Bcongestion) - parseInt(b.Bcongestion);\n      }\n    });\n    setSortedData(sorted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"congestion-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSort(\"adult\"),\n        children: \"\\uC131\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSort(\"child\"),\n        children: \"\\uC18C\\uC544\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: sortedData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - \\uC131\\uC778: \", item.Acongestion, \" / \\uC18C\\uC544: \", item.Bcongestion]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CongestionLevelOrder, \"b28hkVsSCl5l3iQFGAnMT+7OHwo=\");\n_c = CongestionLevelOrder;\nexport default CongestionLevelOrder;\nvar _c;\n$RefreshReg$(_c, \"CongestionLevelOrder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sampleData","id","name","Acongestion","Bcongestion","CongestionLevelOrder","_s","sortedData","setSortedData","handleSort","type","sorted","sort","a","b","parseInt","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/CongestionLevelOrder.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/CongestionLevelOrder.css\"; // CSS 파일 import\r\n\r\nconst sampleData = [\r\n  { id: 1, name: \"Location A\", Acongestion: \"10\", Bcongestion: \"10\" },\r\n  { id: 2, name: \"Location B\", Acongestion: \"9\", Bcongestion: \"6\" },\r\n  { id: 3, name: \"Location C\", Acongestion: \"8\", Bcongestion: \"7\" },\r\n  { id: 4, name: \"Location D\", Acongestion: \"6\", Bcongestion: \"1\" },\r\n  { id: 5, name: \"Location E\", Acongestion: \"5\", Bcongestion: \"4\" },\r\n  { id: 6, name: \"Location F\", Acongestion: \"2\", Bcongestion: \"5\" },\r\n];\r\n\r\nconst CongestionLevelOrder = () => {\r\n  const [sortedData, setSortedData] = useState([...sampleData]);\r\n\r\n  const handleSort = (type) => {\r\n    const sorted = [...sampleData].sort((a, b) => {\r\n      if (type === \"adult\") {\r\n        return parseInt(a.Acongestion) - parseInt(b.Acongestion);\r\n      } else {\r\n        return parseInt(a.Bcongestion) - parseInt(b.Bcongestion);\r\n      }\r\n    });\r\n    setSortedData(sorted);\r\n  };\r\n\r\n  return (\r\n    <div className=\"congestion-container\">\r\n      <div className=\"button-group\">\r\n        <button onClick={() => handleSort(\"adult\")}>성인</button>\r\n        <button onClick={() => handleSort(\"child\")}>소아</button>\r\n      </div>\r\n\r\n      <ul className=\"list\">\r\n        {sortedData.map((item) => (\r\n          <li key={item.id}>\r\n            {item.name} - 성인: {item.Acongestion} / 소아: {item.Bcongestion}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CongestionLevelOrder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}