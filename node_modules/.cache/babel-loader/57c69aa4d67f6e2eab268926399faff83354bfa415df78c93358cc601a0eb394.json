{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\Regist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import \"../css/Regist.css\";\n\n// Mock function to simulate API call for registration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockRegisterAPI = (name, email, password, confirmPassword) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (password === confirmPassword) {\n        resolve({\n          success: true\n        });\n      } else {\n        reject({\n          success: false,\n          message: \"Passwords do not match\"\n        });\n      }\n    }, 1000);\n  });\n};\nconst Regist = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleRegister = async () => {\n    try {\n      const response = await mockRegisterAPI(name, email, password, confirmPassword);\n      if (response.success) {\n        // Redirect to login or display success message\n        console.log(\"Registration successful!\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"regist-button\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"regist-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Regist, \"u3Qogb8wU1O0+dcySepyY9TW22Y=\");\n_c = Regist;\nexport default Regist;\nvar _c;\n$RefreshReg$(_c, \"Regist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mockRegisterAPI","name","email","password","confirmPassword","Promise","resolve","reject","setTimeout","success","message","Regist","_s","setName","setEmail","setPassword","setConfirmPassword","error","setError","handleRegister","response","console","log","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/Regist.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import \"../css/Regist.css\";\r\n\r\n// Mock function to simulate API call for registration\r\nconst mockRegisterAPI = (name, email, password, confirmPassword) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (password === confirmPassword) {\r\n        resolve({ success: true });\r\n      } else {\r\n        reject({ success: false, message: \"Passwords do not match\" });\r\n      }\r\n    }, 1000);\r\n  });\r\n};\r\n\r\nconst Regist = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const response = await mockRegisterAPI(\r\n        name,\r\n        email,\r\n        password,\r\n        confirmPassword\r\n      );\r\n      if (response.success) {\r\n        // Redirect to login or display success message\r\n        console.log(\"Registration successful!\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"regist-container\">\r\n      <h2>Regist</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <button onClick={handleRegister} className=\"regist-button\">\r\n        Register\r\n      </button>\r\n      {error && <p className=\"regist-error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Regist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}