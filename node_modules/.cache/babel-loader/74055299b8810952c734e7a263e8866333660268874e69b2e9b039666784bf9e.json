{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\MapOrder.js\",\n  _s = $RefreshSig$();\n/* global kakao */\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport greenSign from \"../components/greensign.png\";\nimport orangeSign from \"../components/orangesign.png\";\nimport redSign from \"../components/redsign.png\";\nimport yellowSign from \"../components/yellowsign.png\";\nimport foursign from \"../components/foursign.png\";\nimport usericon from \"../components/usericon.png\";\nimport \"../css/MapOrder.css\";\nimport axios from \"axios\";\n\n// Todo: 이거 나중에 지우기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleHospitals = [{\n  id: 1,\n  name: \"Hospital 1\",\n  latitude: 33.450701,\n  longitude: 126.570667,\n  adultpercent: 2,\n  pediatricpercent: 4,\n  dutyId: \"A1000001\"\n}, {\n  id: 2,\n  name: \"Hospital 2\",\n  latitude: 33.451701,\n  longitude: 126.571667,\n  adultpercent: 5,\n  pediatricpercent: 6,\n  dutyId: \"A1000002\"\n}, {\n  id: 3,\n  name: \"Hospital 3\",\n  latitude: 33.452701,\n  longitude: 126.572667,\n  adultpercent: 4,\n  pediatricpercent: 2,\n  dutyId: \"A1000003\"\n}, {\n  id: 4,\n  name: \"Hospital 4\",\n  latitude: 33.455701,\n  longitude: 126.575667,\n  adultpercent: 15,\n  pediatricpercent: 10,\n  dutyId: \"A1000004\"\n}, {\n  id: 5,\n  name: \"Hospital 5\",\n  latitude: 33.451201,\n  longitude: 126.568867,\n  adultpercent: 20,\n  pediatricpercent: 5,\n  dutyId: \"A1000005\"\n}, {\n  id: 6,\n  name: \"Hospital 6\",\n  latitude: 33.448701,\n  longitude: 126.573267,\n  adultpercent: 5,\n  pediatricpercent: 12,\n  dutyId: \"A1000006\"\n}, {\n  id: 7,\n  name: \"Hospital 7\",\n  latitude: 33.453701,\n  longitude: 126.572267,\n  adultpercent: 8,\n  pediatricpercent: 8,\n  dutyId: \"A1000007\"\n}, {\n  id: 8,\n  name: \"Hospital 8\",\n  latitude: 33.452701,\n  longitude: 126.574867,\n  adultpercent: 2,\n  pediatricpercent: 15,\n  dutyId: \"A1000008\"\n}, {\n  id: 9,\n  name: \"Hospital 9\",\n  latitude: 33.449701,\n  longitude: 126.569867,\n  adultpercent: 22,\n  pediatricpercent: 14,\n  dutyId: \"A1000009\"\n}, {\n  id: 10,\n  name: \"Hospital 10\",\n  latitude: 33.454701,\n  longitude: 126.568267,\n  adultpercent: 12,\n  pediatricpercent: 4,\n  dutyId: \"A1000010\"\n}, {\n  id: 11,\n  name: \"Hospital 11\",\n  latitude: 33.456701,\n  longitude: 126.576667,\n  adultpercent: 3,\n  pediatricpercent: 10,\n  dutyId: \"A1000011\"\n}, {\n  id: 12,\n  name: \"Hospital 12\",\n  latitude: 33.447701,\n  longitude: 126.571867,\n  adultpercent: 10,\n  pediatricpercent: 20,\n  dutyId: \"A1000012\"\n}, {\n  id: 13,\n  name: \"Hospital 13\",\n  latitude: 33.458701,\n  longitude: 126.573867,\n  adultpercent: 18,\n  pediatricpercent: 6,\n  dutyId: \"A1000013\"\n}, {\n  id: 14,\n  name: \"Hospital 14\",\n  latitude: 33.456701,\n  longitude: 126.578867,\n  adultpercent: 21,\n  pediatricpercent: 8,\n  dutyId: \"A1000014\"\n}, {\n  id: 15,\n  name: \"Hospital 15\",\n  latitude: 33.457701,\n  longitude: 126.572867,\n  adultpercent: 7,\n  pediatricpercent: 9,\n  dutyId: \"A1000015\"\n}, {\n  id: 16,\n  name: \"Hospital 16\",\n  latitude: 33.451701,\n  longitude: 126.577867,\n  adultpercent: 9,\n  pediatricpercent: 16,\n  dutyId: \"A1000016\"\n}, {\n  id: 17,\n  name: \"Hospital 17\",\n  latitude: 33.450701,\n  longitude: 126.574867,\n  adultpercent: 19,\n  pediatricpercent: 18,\n  dutyId: \"A1000017\"\n}, {\n  id: 18,\n  name: \"Hospital 18\",\n  latitude: 33.459701,\n  longitude: 126.575867,\n  adultpercent: 6,\n  pediatricpercent: 12,\n  dutyId: \"A1000018\"\n}, {\n  id: 19,\n  name: \"Hospital 19\",\n  latitude: 33.455701,\n  longitude: 126.579867,\n  adultpercent: 14,\n  pediatricpercent: 22,\n  dutyId: \"A1000019\"\n}, {\n  id: 20,\n  name: \"Hospital 20\",\n  latitude: 33.457701,\n  longitude: 126.576867,\n  adultpercent: 23,\n  pediatricpercent: 3,\n  dutyId: \"A1000020\"\n}, {\n  id: 21,\n  name: \"Hospital 21\",\n  latitude: 33.453701,\n  longitude: 126.577867,\n  adultpercent: 13,\n  pediatricpercent: 7,\n  dutyId: \"A1000021\"\n}, {\n  id: 22,\n  name: \"Hospital 22\",\n  latitude: 33.452701,\n  longitude: 126.570867,\n  adultpercent: 11,\n  pediatricpercent: 10,\n  dutyId: \"A1000022\"\n}, {\n  id: 23,\n  name: \"Hospital 23\",\n  latitude: 33.458701,\n  longitude: 126.572867,\n  adultpercent: 4,\n  pediatricpercent: 19,\n  dutyId: \"A1000023\"\n}];\nconst MapOrder = () => {\n  _s();\n  const [congestionType, setCongestionType] = useState(\"adultpercent\");\n  const [firstAddress, setFirstAddress] = useState(\"\");\n  const [secondAddress, setSecondAddress] = useState(\"\");\n  const Navigate = useNavigate();\n  let currentOverlay = null;\n  // Todo: 백 API랑 연결하기\n  const BackAPI = \"\";\n  useEffect(() => {\n    var mapContainer = document.getElementById(\"map\");\n    var mapOption = {\n      center: new kakao.maps.LatLng(37.5665, 126.978),\n      level: 10\n    };\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n    kakao.maps.event.addListener(map, \"zoom_changed\", function () {\n      const zoomLevel = map.getLevel();\n      const size = new kakao.maps.Size(40 - zoomLevel * 2, 40 - zoomLevel * 2);\n    });\n\n    // Todo: 이거 나중에 혼잡도 숫자 맞춰주기\n    const displayHospitalsOnMap = hospitals => {\n      hospitals.forEach(hospital => {\n        const position = new kakao.maps.LatLng(hospital.latitude, hospital.longitude);\n        let iconSrc;\n        const congestionValue = hospital[congestionType];\n        if (congestionValue >= 20) {\n          iconSrc = redSign;\n        } else if (congestionValue >= 10) {\n          iconSrc = orangeSign;\n        } else if (congestionValue >= 5) {\n          iconSrc = yellowSign;\n        } else if (congestionValue >= 0) {\n          iconSrc = greenSign;\n        }\n        const imageSize = new kakao.maps.Size(40, 40);\n        const imageOption = {\n          offset: new kakao.maps.Point(27, 69)\n        };\n        const markerImage = new kakao.maps.MarkerImage(iconSrc, imageSize, imageOption);\n        const marker = new kakao.maps.Marker({\n          position: position,\n          image: markerImage\n        });\n        marker.setMap(map);\n\n        // 커스텀 오버레이에 표시할 내용입니다\n        const content = `<div class =\"label\">\n          <span class=\"left\"></span>\n          <span class=\"center\">${hospital.name}: ${congestionValue} 혼잡도</span>\n          <span class=\"right\"></span>\n          </div>`;\n        const customOverlay = new kakao.maps.CustomOverlay({\n          position: position,\n          content: content\n        });\n\n        // 마커를 클릭했을 때 커스텀 오버레이를 표시하거나 병원 페이지로 이동\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          if (currentOverlay === customOverlay) {\n            // 현재 클릭한 마커와 연관된 오버레이가 이미 열려있는 경우\n            window.location.href = `/HInfo/${hospital.dutyId}`;\n          } else {\n            if (currentOverlay) {\n              currentOverlay.setMap(null); // 이전 오버레이 숨기기\n            }\n\n            customOverlay.setMap(map);\n            currentOverlay = customOverlay; // 현재 오버레이 업데이트\n          }\n        });\n\n        // 지도를 클릭했을 때 커스텀 오버레이를 숨깁니다\n        kakao.maps.event.addListener(map, \"click\", function () {\n          if (currentOverlay) {\n            currentOverlay.setMap(null);\n            currentOverlay = null;\n          }\n        });\n      });\n    };\n    // Todo: 이거 나중에 sample도 빼줘야 됨 -> 실제 리스트로\n    displayHospitalsOnMap(sampleHospitals);\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        try {\n          const response = await fetch(`https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lng}&y=${lat}`, {\n            headers: {\n              Authorization: \"KakaoAK e66ae55f0df11d36b2b954ae39f001eb\",\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n            }\n          });\n          const data = await response.json();\n          if (data.documents && data.documents.length > 0) {\n            const address = data.documents[0].address;\n            setFirstAddress(address.region_1depth_name);\n            setSecondAddress(address.region_2depth_name);\n          }\n        } catch (error) {\n          console.error(\"Error fetching address\", error);\n        }\n        const userPosition = new kakao.maps.LatLng(lat, lng);\n        const userIconSrc = usericon;\n        const userImageSize = new kakao.maps.Size(40, 40);\n        const userImageOption = {\n          offset: new kakao.maps.Point(20, 20)\n        };\n        const userMarkerImage = new kakao.maps.MarkerImage(userIconSrc, userImageSize, userImageOption);\n        const userMarker = new kakao.maps.Marker({\n          position: userPosition,\n          image: userMarkerImage\n        });\n        userMarker.setMap(map);\n      }, error => {\n        console.log(\"Error occurred. Error code: \" + error.code);\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }, [congestionType]);\n  const handleSort = async type => {\n    /* Todo: 백 연결하고 이거 주석 처리 풀기\r\n    try {\r\n      const response = await axios.get(BackAPI, {\r\n        params: {\r\n          firstaddress: firstAddress,\r\n          secondaddress: secondAddress,\r\n          isadult: type === \"adult\",\r\n        },\r\n      });\r\n        if (response.data) {\r\n        displayHospitalsOnMap(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching sorted hospitals\", error);\r\n    }\r\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"0 20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCongestionType(\"adultpercent\");\n          handleSort(\"adult\");\n        },\n        className: `button ${congestionType === \"adultpercent\" ? \"buttonadultpercent\" : \"buttonDefault\"}`,\n        children: \"\\uC131\\uC778 \\uD63C\\uC7A1\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCongestionType(\"pediatricpercent\");\n          handleSort(\"child\");\n        },\n        className: `button ${congestionType === \"pediatricpercent\" ? \"buttonadultpercent\" : \"buttonDefault\"}`,\n        children: \"\\uC18C\\uC544 \\uD63C\\uC7A1\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imageContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: foursign,\n        alt: \"\\uC9C0\\uB3C4 \\uAE30\\uC900\",\n        className: \"mapImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 388,\n    columnNumber: 5\n  }, this);\n};\n_s(MapOrder, \"SDH1lo5FL82V1OHsuBWmFaubx8w=\", false, function () {\n  return [useNavigate];\n});\n_c = MapOrder;\nexport default MapOrder;\nvar _c;\n$RefreshReg$(_c, \"MapOrder\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","greenSign","orangeSign","redSign","yellowSign","foursign","usericon","axios","jsxDEV","_jsxDEV","sampleHospitals","id","name","latitude","longitude","adultpercent","pediatricpercent","dutyId","MapOrder","_s","congestionType","setCongestionType","firstAddress","setFirstAddress","secondAddress","setSecondAddress","Navigate","currentOverlay","BackAPI","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","Map","event","addListener","zoomLevel","getLevel","size","Size","displayHospitalsOnMap","hospitals","forEach","hospital","position","iconSrc","congestionValue","imageSize","imageOption","offset","Point","markerImage","MarkerImage","marker","Marker","image","setMap","content","customOverlay","CustomOverlay","window","location","href","navigator","geolocation","getCurrentPosition","lat","coords","lng","response","fetch","headers","Authorization","data","json","documents","length","address","region_1depth_name","region_2depth_name","error","console","userPosition","userIconSrc","userImageSize","userImageOption","userMarkerImage","userMarker","log","code","handleSort","type","style","padding","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/MapOrder.js"],"sourcesContent":["/* global kakao */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport greenSign from \"../components/greensign.png\";\r\nimport orangeSign from \"../components/orangesign.png\";\r\nimport redSign from \"../components/redsign.png\";\r\nimport yellowSign from \"../components/yellowsign.png\";\r\nimport foursign from \"../components/foursign.png\";\r\nimport usericon from \"../components/usericon.png\";\r\nimport \"../css/MapOrder.css\";\r\nimport axios from \"axios\";\r\n\r\n// Todo: 이거 나중에 지우기\r\nconst sampleHospitals = [\r\n  {\r\n    id: 1,\r\n    name: \"Hospital 1\",\r\n    latitude: 33.450701,\r\n    longitude: 126.570667,\r\n    adultpercent: 2,\r\n    pediatricpercent: 4,\r\n    dutyId: \"A1000001\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Hospital 2\",\r\n    latitude: 33.451701,\r\n    longitude: 126.571667,\r\n    adultpercent: 5,\r\n    pediatricpercent: 6,\r\n    dutyId: \"A1000002\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Hospital 3\",\r\n    latitude: 33.452701,\r\n    longitude: 126.572667,\r\n    adultpercent: 4,\r\n    pediatricpercent: 2,\r\n    dutyId: \"A1000003\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Hospital 4\",\r\n    latitude: 33.455701,\r\n    longitude: 126.575667,\r\n    adultpercent: 15,\r\n    pediatricpercent: 10,\r\n    dutyId: \"A1000004\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Hospital 5\",\r\n    latitude: 33.451201,\r\n    longitude: 126.568867,\r\n    adultpercent: 20,\r\n    pediatricpercent: 5,\r\n    dutyId: \"A1000005\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Hospital 6\",\r\n    latitude: 33.448701,\r\n    longitude: 126.573267,\r\n    adultpercent: 5,\r\n    pediatricpercent: 12,\r\n    dutyId: \"A1000006\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Hospital 7\",\r\n    latitude: 33.453701,\r\n    longitude: 126.572267,\r\n    adultpercent: 8,\r\n    pediatricpercent: 8,\r\n    dutyId: \"A1000007\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Hospital 8\",\r\n    latitude: 33.452701,\r\n    longitude: 126.574867,\r\n    adultpercent: 2,\r\n    pediatricpercent: 15,\r\n    dutyId: \"A1000008\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Hospital 9\",\r\n    latitude: 33.449701,\r\n    longitude: 126.569867,\r\n    adultpercent: 22,\r\n    pediatricpercent: 14,\r\n    dutyId: \"A1000009\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Hospital 10\",\r\n    latitude: 33.454701,\r\n    longitude: 126.568267,\r\n    adultpercent: 12,\r\n    pediatricpercent: 4,\r\n    dutyId: \"A1000010\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Hospital 11\",\r\n    latitude: 33.456701,\r\n    longitude: 126.576667,\r\n    adultpercent: 3,\r\n    pediatricpercent: 10,\r\n    dutyId: \"A1000011\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Hospital 12\",\r\n    latitude: 33.447701,\r\n    longitude: 126.571867,\r\n    adultpercent: 10,\r\n    pediatricpercent: 20,\r\n    dutyId: \"A1000012\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Hospital 13\",\r\n    latitude: 33.458701,\r\n    longitude: 126.573867,\r\n    adultpercent: 18,\r\n    pediatricpercent: 6,\r\n    dutyId: \"A1000013\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Hospital 14\",\r\n    latitude: 33.456701,\r\n    longitude: 126.578867,\r\n    adultpercent: 21,\r\n    pediatricpercent: 8,\r\n    dutyId: \"A1000014\",\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Hospital 15\",\r\n    latitude: 33.457701,\r\n    longitude: 126.572867,\r\n    adultpercent: 7,\r\n    pediatricpercent: 9,\r\n    dutyId: \"A1000015\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Hospital 16\",\r\n    latitude: 33.451701,\r\n    longitude: 126.577867,\r\n    adultpercent: 9,\r\n    pediatricpercent: 16,\r\n    dutyId: \"A1000016\",\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"Hospital 17\",\r\n    latitude: 33.450701,\r\n    longitude: 126.574867,\r\n    adultpercent: 19,\r\n    pediatricpercent: 18,\r\n    dutyId: \"A1000017\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Hospital 18\",\r\n    latitude: 33.459701,\r\n    longitude: 126.575867,\r\n    adultpercent: 6,\r\n    pediatricpercent: 12,\r\n    dutyId: \"A1000018\",\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"Hospital 19\",\r\n    latitude: 33.455701,\r\n    longitude: 126.579867,\r\n    adultpercent: 14,\r\n    pediatricpercent: 22,\r\n    dutyId: \"A1000019\",\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Hospital 20\",\r\n    latitude: 33.457701,\r\n    longitude: 126.576867,\r\n    adultpercent: 23,\r\n    pediatricpercent: 3,\r\n    dutyId: \"A1000020\",\r\n  },\r\n  {\r\n    id: 21,\r\n    name: \"Hospital 21\",\r\n    latitude: 33.453701,\r\n    longitude: 126.577867,\r\n    adultpercent: 13,\r\n    pediatricpercent: 7,\r\n    dutyId: \"A1000021\",\r\n  },\r\n  {\r\n    id: 22,\r\n    name: \"Hospital 22\",\r\n    latitude: 33.452701,\r\n    longitude: 126.570867,\r\n    adultpercent: 11,\r\n    pediatricpercent: 10,\r\n    dutyId: \"A1000022\",\r\n  },\r\n  {\r\n    id: 23,\r\n    name: \"Hospital 23\",\r\n    latitude: 33.458701,\r\n    longitude: 126.572867,\r\n    adultpercent: 4,\r\n    pediatricpercent: 19,\r\n    dutyId: \"A1000023\",\r\n  },\r\n];\r\n\r\nconst MapOrder = () => {\r\n  const [congestionType, setCongestionType] = useState(\"adultpercent\");\r\n  const [firstAddress, setFirstAddress] = useState(\"\");\r\n  const [secondAddress, setSecondAddress] = useState(\"\");\r\n  const Navigate = useNavigate();\r\n  let currentOverlay = null;\r\n  // Todo: 백 API랑 연결하기\r\n  const BackAPI = \"\";\r\n\r\n  useEffect(() => {\r\n    var mapContainer = document.getElementById(\"map\");\r\n\r\n    var mapOption = {\r\n      center: new kakao.maps.LatLng(37.5665, 126.978),\r\n      level: 10,\r\n    };\r\n\r\n    var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    kakao.maps.event.addListener(map, \"zoom_changed\", function () {\r\n      const zoomLevel = map.getLevel();\r\n      const size = new kakao.maps.Size(40 - zoomLevel * 2, 40 - zoomLevel * 2);\r\n    });\r\n\r\n    // Todo: 이거 나중에 혼잡도 숫자 맞춰주기\r\n    const displayHospitalsOnMap = (hospitals) => {\r\n      hospitals.forEach((hospital) => {\r\n        const position = new kakao.maps.LatLng(\r\n          hospital.latitude,\r\n          hospital.longitude\r\n        );\r\n        let iconSrc;\r\n        const congestionValue = hospital[congestionType];\r\n        if (congestionValue >= 20) {\r\n          iconSrc = redSign;\r\n        } else if (congestionValue >= 10) {\r\n          iconSrc = orangeSign;\r\n        } else if (congestionValue >= 5) {\r\n          iconSrc = yellowSign;\r\n        } else if (congestionValue >= 0) {\r\n          iconSrc = greenSign;\r\n        }\r\n        const imageSize = new kakao.maps.Size(40, 40);\r\n        const imageOption = { offset: new kakao.maps.Point(27, 69) };\r\n        const markerImage = new kakao.maps.MarkerImage(\r\n          iconSrc,\r\n          imageSize,\r\n          imageOption\r\n        );\r\n        const marker = new kakao.maps.Marker({\r\n          position: position,\r\n          image: markerImage,\r\n        });\r\n        marker.setMap(map);\r\n\r\n        // 커스텀 오버레이에 표시할 내용입니다\r\n        const content = `<div class =\"label\">\r\n          <span class=\"left\"></span>\r\n          <span class=\"center\">${hospital.name}: ${congestionValue} 혼잡도</span>\r\n          <span class=\"right\"></span>\r\n          </div>`;\r\n\r\n        const customOverlay = new kakao.maps.CustomOverlay({\r\n          position: position,\r\n          content: content,\r\n        });\r\n\r\n        // 마커를 클릭했을 때 커스텀 오버레이를 표시하거나 병원 페이지로 이동\r\n        kakao.maps.event.addListener(marker, \"click\", function () {\r\n          if (currentOverlay === customOverlay) {\r\n            // 현재 클릭한 마커와 연관된 오버레이가 이미 열려있는 경우\r\n            window.location.href = `/HInfo/${hospital.dutyId}`;\r\n          } else {\r\n            if (currentOverlay) {\r\n              currentOverlay.setMap(null); // 이전 오버레이 숨기기\r\n            }\r\n            customOverlay.setMap(map);\r\n            currentOverlay = customOverlay; // 현재 오버레이 업데이트\r\n          }\r\n        });\r\n\r\n        // 지도를 클릭했을 때 커스텀 오버레이를 숨깁니다\r\n        kakao.maps.event.addListener(map, \"click\", function () {\r\n          if (currentOverlay) {\r\n            currentOverlay.setMap(null);\r\n            currentOverlay = null;\r\n          }\r\n        });\r\n      });\r\n    };\r\n    // Todo: 이거 나중에 sample도 빼줘야 됨 -> 실제 리스트로\r\n    displayHospitalsOnMap(sampleHospitals);\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const lat = position.coords.latitude;\r\n          const lng = position.coords.longitude;\r\n          try {\r\n            const response = await fetch(\r\n              `https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lng}&y=${lat}`,\r\n              {\r\n                headers: {\r\n                  Authorization: \"KakaoAK e66ae55f0df11d36b2b954ae39f001eb\",\r\n                  \"Content-Type\":\r\n                    \"application/x-www-form-urlencoded;charset=utf-8\",\r\n                },\r\n              }\r\n            );\r\n            const data = await response.json();\r\n            if (data.documents && data.documents.length > 0) {\r\n              const address = data.documents[0].address;\r\n              setFirstAddress(address.region_1depth_name);\r\n              setSecondAddress(address.region_2depth_name);\r\n            }\r\n          } catch (error) {\r\n            console.error(\"Error fetching address\", error);\r\n          }\r\n\r\n          const userPosition = new kakao.maps.LatLng(lat, lng);\r\n          const userIconSrc = usericon;\r\n          const userImageSize = new kakao.maps.Size(40, 40);\r\n          const userImageOption = { offset: new kakao.maps.Point(20, 20) };\r\n          const userMarkerImage = new kakao.maps.MarkerImage(\r\n            userIconSrc,\r\n            userImageSize,\r\n            userImageOption\r\n          );\r\n          const userMarker = new kakao.maps.Marker({\r\n            position: userPosition,\r\n            image: userMarkerImage,\r\n          });\r\n          userMarker.setMap(map);\r\n        },\r\n        (error) => {\r\n          console.log(\"Error occurred. Error code: \" + error.code);\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, [congestionType]);\r\n\r\n  const handleSort = async (type) => {\r\n    /* Todo: 백 연결하고 이거 주석 처리 풀기\r\n    try {\r\n      const response = await axios.get(BackAPI, {\r\n        params: {\r\n          firstaddress: firstAddress,\r\n          secondaddress: secondAddress,\r\n          isadult: type === \"adult\",\r\n        },\r\n      });\r\n\r\n      if (response.data) {\r\n        displayHospitalsOnMap(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching sorted hospitals\", error);\r\n    }\r\n    */\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"0 20px\" }}>\r\n      <div className=\"mapContainer\">\r\n        <button\r\n          onClick={() => {\r\n            setCongestionType(\"adultpercent\");\r\n            handleSort(\"adult\");\r\n          }}\r\n          className={`button ${\r\n            congestionType === \"adultpercent\"\r\n              ? \"buttonadultpercent\"\r\n              : \"buttonDefault\"\r\n          }`}\r\n        >\r\n          성인 혼잡도\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setCongestionType(\"pediatricpercent\");\r\n            handleSort(\"child\");\r\n          }}\r\n          className={`button ${\r\n            congestionType === \"pediatricpercent\"\r\n              ? \"buttonadultpercent\"\r\n              : \"buttonDefault\"\r\n          }`}\r\n        >\r\n          소아 혼잡도\r\n        </button>\r\n      </div>\r\n      <div className=\"map\" id=\"map\"></div>\r\n      <div className=\"imageContainer\">\r\n        <img src={foursign} alt=\"지도 기준\" className=\"mapImage\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapOrder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}