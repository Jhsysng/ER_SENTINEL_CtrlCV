{"ast":null,"code":"import axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport { parseJwt } from './JwtUtils';\nimport { config } from './Constants';\nexport const apiUtils = {\n  signIn,\n  signUp\n};\nconst cookies = new Cookies();\nfunction getTokenByRefreshToken(refreshToken) {\n  return instance.get('/auth/refreshToken', {\n    headers: {\n      Authorization: bearerRefresh(refreshToken)\n    }\n  });\n}\nfunction signIn(data) {\n  const url = '/auth/signIn';\n  return instance.post(url, data, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\n\n// JWT 토큰을 담아서 보내는 예시, 토큰을 갖고 개인 정보를 불러옴\nfunction getUserInfo(user) {\n  const url = `/user`;\n  return instance.get(url, {\n    headers: {\n      'Authorization': bearerAccess(user)\n    }\n  });\n}\nfunction signUp(user) {\n  return instance.post('/auth/signUp', user, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\n\n// -- Axios\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n});\n\n// -- Helper functions\n\nfunction bearerAccess(user) {\n  return `Bearer ${user.accessToken}`;\n}\nfunction bearerRefresh(refreshToken) {\n  return `Bearer ${refreshToken}`;\n}","map":{"version":3,"names":["axios","Cookies","parseJwt","config","apiUtils","signIn","signUp","cookies","getTokenByRefreshToken","refreshToken","instance","get","headers","Authorization","bearerRefresh","data","url","post","getUserInfo","user","bearerAccess","create","baseURL","API_BASE_URL","accessToken"],"sources":["D:/OneDrive - dgu.ac.kr/바탕 화면/공부/Spring/ER_SENTINEL_CtrlCV/src/utils/ApiUtils.js"],"sourcesContent":["import axios from 'axios';\r\nimport { Cookies } from 'react-cookie';\r\nimport { parseJwt } from './JwtUtils';\r\nimport { config } from './Constants';\r\n\r\nexport const apiUtils = {\r\n    signIn,\r\n    signUp,\r\n};\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction getTokenByRefreshToken(refreshToken) {\r\n  return instance.get('/auth/refreshToken', {\r\n    headers: { Authorization: bearerRefresh(refreshToken) },\r\n  });\r\n}\r\n\r\nfunction signIn(data) {\r\n  const url = '/auth/signIn';\r\n  return instance.post(url, data, {\r\n    headers: { 'Content-type': 'application/json' },\r\n  });\r\n}\r\n\r\n// JWT 토큰을 담아서 보내는 예시, 토큰을 갖고 개인 정보를 불러옴\r\nfunction getUserInfo(user) {\r\n  const url = `/user`;\r\n  return instance.get(url, {\r\n    headers: {'Authorization': bearerAccess(user)}\r\n  })\r\n}\r\n\r\nfunction signUp(user) {\r\n  return instance.post('/auth/signUp', user, {\r\n    headers: {'Content-type': 'application/json'}\r\n  })\r\n}\r\n\r\n// -- Axios\r\nconst instance = axios.create({\r\n  baseURL: config.url.API_BASE_URL,\r\n});\r\n\r\n\r\n// -- Helper functions\r\n\r\nfunction bearerAccess(user) {\r\n  return `Bearer ${user.accessToken}`;\r\n}\r\n\r\nfunction bearerRefresh(refreshToken) {\r\n  return `Bearer ${refreshToken}`;\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,MAAM,QAAQ,aAAa;AAEpC,OAAO,MAAMC,QAAQ,GAAG;EACpBC,MAAM;EACNC;AACJ,CAAC;AAED,MAAMC,OAAO,GAAG,IAAIN,OAAO,CAAC,CAAC;AAE7B,SAASO,sBAAsBA,CAACC,YAAY,EAAE;EAC5C,OAAOC,QAAQ,CAACC,GAAG,CAAC,oBAAoB,EAAE;IACxCC,OAAO,EAAE;MAAEC,aAAa,EAAEC,aAAa,CAACL,YAAY;IAAE;EACxD,CAAC,CAAC;AACJ;AAEA,SAASJ,MAAMA,CAACU,IAAI,EAAE;EACpB,MAAMC,GAAG,GAAG,cAAc;EAC1B,OAAON,QAAQ,CAACO,IAAI,CAACD,GAAG,EAAED,IAAI,EAAE;IAC9BH,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;AACJ;;AAEA;AACA,SAASM,WAAWA,CAACC,IAAI,EAAE;EACzB,MAAMH,GAAG,GAAI,OAAM;EACnB,OAAON,QAAQ,CAACC,GAAG,CAACK,GAAG,EAAE;IACvBJ,OAAO,EAAE;MAAC,eAAe,EAAEQ,YAAY,CAACD,IAAI;IAAC;EAC/C,CAAC,CAAC;AACJ;AAEA,SAASb,MAAMA,CAACa,IAAI,EAAE;EACpB,OAAOT,QAAQ,CAACO,IAAI,CAAC,cAAc,EAAEE,IAAI,EAAE;IACzCP,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB;EAC9C,CAAC,CAAC;AACJ;;AAEA;AACA,MAAMF,QAAQ,GAAGV,KAAK,CAACqB,MAAM,CAAC;EAC5BC,OAAO,EAAEnB,MAAM,CAACa,GAAG,CAACO;AACtB,CAAC,CAAC;;AAGF;;AAEA,SAASH,YAAYA,CAACD,IAAI,EAAE;EAC1B,OAAQ,UAASA,IAAI,CAACK,WAAY,EAAC;AACrC;AAEA,SAASV,aAAaA,CAACL,YAAY,EAAE;EACnC,OAAQ,UAASA,YAAa,EAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}