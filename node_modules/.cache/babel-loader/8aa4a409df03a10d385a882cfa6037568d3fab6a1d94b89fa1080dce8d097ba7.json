{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\Regist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/Regist.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Regist = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Todo: 백 API로 변경하기\n  const BackAPI = \"\";\n  const handleRegister = async () => {\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    try {\n      // 아래의 주소는 백엔드 API 주소로 변경해야 합니다.\n      const response = await axios.post(BackAPI, {\n        name: name,\n        email: email,\n        password: password\n      });\n      if (response.data.success) {\n        console.log(\"Registration successful!\");\n        // Optionally: Redirect to login or display success message\n      } else {\n        setError(response.data.message || \"Registration failed\");\n      }\n    } catch (err) {\n      setError(err.message || \"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Regist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      className: \"regist-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"regist-button\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"regist-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Regist, \"u3Qogb8wU1O0+dcySepyY9TW22Y=\");\n_c = Regist;\nexport default Regist;\nvar _c;\n$RefreshReg$(_c, \"Regist\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Regist","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","BackAPI","handleRegister","response","post","data","success","console","log","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/Regist.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\"; \r\nimport \"../css/Regist.css\";\r\n\r\nconst Regist = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  // Todo: 백 API로 변경하기\r\n  const BackAPI = \"\";\r\n\r\n  const handleRegister = async () => {\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 아래의 주소는 백엔드 API 주소로 변경해야 합니다.\r\n      const response = await axios.post(BackAPI, {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        console.log(\"Registration successful!\");\r\n        // Optionally: Redirect to login or display success message\r\n      } else {\r\n        setError(response.data.message || \"Registration failed\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || \"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"regist-container\">\r\n      <h2>Regist</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        className=\"regist-input\"\r\n      />\r\n      <button onClick={handleRegister} className=\"regist-button\">\r\n        Register\r\n      </button>\r\n      {error && <p className=\"regist-error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Regist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}