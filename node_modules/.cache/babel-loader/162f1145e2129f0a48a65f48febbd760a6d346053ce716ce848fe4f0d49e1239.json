{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\DistanceOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"../css/DistanceOrder.css\";\nimport axios from \"axios\";\n\n// Todo: 이거 나중에 지우기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleHospitals = [{\n  id: 1,\n  dutyId: \"A000001\",\n  name: \"Hospital 1\",\n  distance: \"3.1\",\n  adultpercent: \"2\",\n  pediatricpercent: \"2\"\n}, {\n  id: 2,\n  dutyId: \"A000002\",\n  name: \"Hospital 2\",\n  distance: \"2.3\",\n  adultpercent: \"1\",\n  pediatricpercent: \"3\"\n}, {\n  id: 3,\n  dutyId: \"A000003\",\n  name: \"Hospital 3\",\n  distance: \"1.7\",\n  adultpercent: \"4\",\n  pediatricpercent: \"6\"\n}, {\n  id: 4,\n  dutyId: \"A000004\",\n  name: \"Hospital 4\",\n  distance: \"5.4\",\n  adultpercent: \"3\",\n  pediatricpercent: \"4\"\n}, {\n  id: 5,\n  dutyId: \"A000005\",\n  name: \"Hospital 5\",\n  distance: \"4.2\",\n  adultpercent: \"4\",\n  pediatricpercent: \"7\"\n}, {\n  id: 6,\n  dutyId: \"A000006\",\n  name: \"Hospital 6\",\n  distance: \"3.2\",\n  adultpercent: \"5\",\n  pediatricpercent: \"3\"\n}, {\n  id: 7,\n  dutyId: \"A000007\",\n  name: \"Hospital 7\",\n  distance: \"5.7\",\n  adultpercent: \"6\",\n  pediatricpercent: \"2\"\n}, {\n  id: 8,\n  dutyId: \"A000008\",\n  name: \"Hospital 8\",\n  distance: \"2.3\",\n  adultpercent: \"2\",\n  pediatricpercent: \"4\"\n}, {\n  id: 9,\n  dutyId: \"A000009\",\n  name: \"Hospital 9\",\n  distance: \"6.7\",\n  adultpercent: \"7\",\n  pediatricpercent: \"7\"\n}, {\n  id: 10,\n  dutyId: \"A0000010\",\n  name: \"Hospital 10\",\n  distance: \"8.2\",\n  adultpercent: \"8\",\n  pediatricpercent: \"3\"\n}, {\n  id: 11,\n  dutyId: \"A0000011\",\n  name: \"Hospital 11\",\n  distance: \"9.1\",\n  adultpercent: \"2\",\n  pediatricpercent: \"4\"\n}, {\n  id: 12,\n  dutyId: \"A0000012\",\n  name: \"Hospital 12\",\n  distance: \"0.5\",\n  adultpercent: \"1\",\n  pediatricpercent: \"3\"\n}];\nconst DistanceOrder = () => {\n  _s();\n  const [sortedHospitals, setSortedHospitals] = useState([]);\n  const [userLocation, setUserLocation] = useState(\"Fetching location...\");\n  const [Latitude, setLatitude] = useState(\"\");\n  const [Longitude, setLongitude] = useState(\"\");\n  const Navigate = useNavigate();\n  // Todo: 백 API 연결하기\n  const BackAPI = \"\";\n  const handleHospitalClick = hospitalCode => {\n    Navigate(`/HInfo/${hospitalCode}`);\n  };\n  const requestPermissionAgain = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        setLatitude(latitude);\n        setLongitude(longitude);\n        try {\n          const response = await fetch(`https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${longitude}&y=${latitude}`, {\n            headers: {\n              Authorization: \"KakaoAK e66ae55f0df11d36b2b954ae39f001eb\",\n              \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n            }\n          });\n          const data = await response.json();\n          if (data.documents && data.documents.length > 0) {\n            const address = data.documents[0].address;\n            setUserLocation(address.address_name);\n          } else {\n            setUserLocation(\"Cannot find address for this location\");\n          }\n        } catch (error) {\n          setUserLocation(\"Error fetching address\");\n        }\n      }, error => {\n        if (error.code === error.PERMISSION_DENIED) {\n          setUserLocation(\"User denied the request for Geolocation.\");\n        } else {\n          setUserLocation(\"Unable to retrieve your location\");\n        }\n      });\n    } else {\n      setUserLocation(\"Geolocation is not supported by this browser\");\n    }\n  };\n  useEffect(() => {\n    requestPermissionAgain(); // 초기 로드 시 권한 요청\n\n    /* Todo: 백 연결 하고 주석 부분 풀기\r\n    if (userLocation !== \"Fetching location...\") {\r\n      axios.post(BackAPI, { lon: Latitude, lat: Longitude })\r\n        .then(response => {\r\n          setSortedHospitals(response.data.hospitals);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching hospitals:\", error);\r\n        });\r\n    }\r\n    */\n\n    // Todo: 백 연결하고 이거 바꿔주기 distance 없음\n    const sorted = [...sampleHospitals].sort((a, b) => parseFloat(a.distance) - parseFloat(b.distance));\n    setSortedHospitals(sorted);\n  }, [userLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Distance-distance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"Distance-h2\",\n      children: userLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), userLocation === \"User denied the request for Geolocation.\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please allow location access to use this feature.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestPermissionAgain,\n        children: \"Request Permission Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"Distance-hospital-list\",\n      children: sortedHospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"Distance-hospital-item\",\n        onClick: () => handleHospitalClick(hospital.dutyId),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Distance-hospital-name\",\n          children: hospital.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Distance-congestion-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uC131\\uC778: \", hospital.adultpercent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Distance-congestion-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uC18C\\uC544: \", hospital.pediatricpercent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, hospital.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(DistanceOrder, \"IWHgC9OXQolxXDQkrP5vEFvbuVw=\", false, function () {\n  return [useNavigate];\n});\n_c = DistanceOrder;\nexport default DistanceOrder;\nvar _c;\n$RefreshReg$(_c, \"DistanceOrder\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","sampleHospitals","id","dutyId","name","distance","adultpercent","pediatricpercent","DistanceOrder","_s","sortedHospitals","setSortedHospitals","userLocation","setUserLocation","Latitude","setLatitude","Longitude","setLongitude","Navigate","BackAPI","handleHospitalClick","hospitalCode","requestPermissionAgain","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","response","fetch","headers","Authorization","data","json","documents","length","address","address_name","error","code","PERMISSION_DENIED","sorted","sort","a","b","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","hospital","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/DistanceOrder.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"../css/DistanceOrder.css\";\r\nimport axios from \"axios\";\r\n\r\n// Todo: 이거 나중에 지우기\r\nconst sampleHospitals = [\r\n  {\r\n    id: 1,\r\n    dutyId: \"A000001\",\r\n    name: \"Hospital 1\",\r\n    distance: \"3.1\",\r\n    adultpercent: \"2\",\r\n    pediatricpercent: \"2\",\r\n  },\r\n  {\r\n    id: 2,\r\n    dutyId: \"A000002\",\r\n    name: \"Hospital 2\",\r\n    distance: \"2.3\",\r\n    adultpercent: \"1\",\r\n    pediatricpercent: \"3\",\r\n  },\r\n  {\r\n    id: 3,\r\n    dutyId: \"A000003\",\r\n    name: \"Hospital 3\",\r\n    distance: \"1.7\",\r\n    adultpercent: \"4\",\r\n    pediatricpercent: \"6\",\r\n  },\r\n  {\r\n    id: 4,\r\n    dutyId: \"A000004\",\r\n    name: \"Hospital 4\",\r\n    distance: \"5.4\",\r\n    adultpercent: \"3\",\r\n    pediatricpercent: \"4\",\r\n  },\r\n  {\r\n    id: 5,\r\n    dutyId: \"A000005\",\r\n    name: \"Hospital 5\",\r\n    distance: \"4.2\",\r\n    adultpercent: \"4\",\r\n    pediatricpercent: \"7\",\r\n  },\r\n  {\r\n    id: 6,\r\n    dutyId: \"A000006\",\r\n    name: \"Hospital 6\",\r\n    distance: \"3.2\",\r\n    adultpercent: \"5\",\r\n    pediatricpercent: \"3\",\r\n  },\r\n  {\r\n    id: 7,\r\n    dutyId: \"A000007\",\r\n    name: \"Hospital 7\",\r\n    distance: \"5.7\",\r\n    adultpercent: \"6\",\r\n    pediatricpercent: \"2\",\r\n  },\r\n  {\r\n    id: 8,\r\n    dutyId: \"A000008\",\r\n    name: \"Hospital 8\",\r\n    distance: \"2.3\",\r\n    adultpercent: \"2\",\r\n    pediatricpercent: \"4\",\r\n  },\r\n  {\r\n    id: 9,\r\n    dutyId: \"A000009\",\r\n    name: \"Hospital 9\",\r\n    distance: \"6.7\",\r\n    adultpercent: \"7\",\r\n    pediatricpercent: \"7\",\r\n  },\r\n  {\r\n    id: 10,\r\n    dutyId: \"A0000010\",\r\n    name: \"Hospital 10\",\r\n    distance: \"8.2\",\r\n    adultpercent: \"8\",\r\n    pediatricpercent: \"3\",\r\n  },\r\n  {\r\n    id: 11,\r\n    dutyId: \"A0000011\",\r\n    name: \"Hospital 11\",\r\n    distance: \"9.1\",\r\n    adultpercent: \"2\",\r\n    pediatricpercent: \"4\",\r\n  },\r\n  {\r\n    id: 12,\r\n    dutyId: \"A0000012\",\r\n    name: \"Hospital 12\",\r\n    distance: \"0.5\",\r\n    adultpercent: \"1\",\r\n    pediatricpercent: \"3\",\r\n  },\r\n];\r\n\r\nconst DistanceOrder = () => {\r\n  const [sortedHospitals, setSortedHospitals] = useState([]);\r\n  const [userLocation, setUserLocation] = useState(\"Fetching location...\");\r\n  const [Latitude, setLatitude] = useState(\"\");\r\n  const [Longitude, setLongitude] = useState(\"\");\r\n  const Navigate = useNavigate();\r\n  // Todo: 백 API 연결하기\r\n  const BackAPI = \"\";\r\n\r\n  const handleHospitalClick = (hospitalCode) => {\r\n    Navigate(`/HInfo/${hospitalCode}`);\r\n  };\r\n\r\n  const requestPermissionAgain = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const latitude = position.coords.latitude;\r\n          const longitude = position.coords.longitude;\r\n          setLatitude(latitude);\r\n          setLongitude(longitude);\r\n          try {\r\n            const response = await fetch(\r\n              `https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${longitude}&y=${latitude}`,\r\n              {\r\n                headers: {\r\n                  Authorization: \"KakaoAK e66ae55f0df11d36b2b954ae39f001eb\",\r\n                  \"Content-Type\":\r\n                    \"application/x-www-form-urlencoded;charset=utf-8\",\r\n                },\r\n              }\r\n            );\r\n            const data = await response.json();\r\n            if (data.documents && data.documents.length > 0) {\r\n              const address = data.documents[0].address;\r\n              setUserLocation(address.address_name);\r\n            } else {\r\n              setUserLocation(\"Cannot find address for this location\");\r\n            }\r\n          } catch (error) {\r\n            setUserLocation(\"Error fetching address\");\r\n          }\r\n        },\r\n        (error) => {\r\n          if (error.code === error.PERMISSION_DENIED) {\r\n            setUserLocation(\"User denied the request for Geolocation.\");\r\n          } else {\r\n            setUserLocation(\"Unable to retrieve your location\");\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      setUserLocation(\"Geolocation is not supported by this browser\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestPermissionAgain(); // 초기 로드 시 권한 요청\r\n\r\n    /* Todo: 백 연결 하고 주석 부분 풀기\r\n    if (userLocation !== \"Fetching location...\") {\r\n      axios.post(BackAPI, { lon: Latitude, lat: Longitude })\r\n        .then(response => {\r\n          setSortedHospitals(response.data.hospitals);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching hospitals:\", error);\r\n        });\r\n    }\r\n    */\r\n\r\n    // Todo: 백 연결하고 이거 바꿔주기 distance 없음\r\n    const sorted = [...sampleHospitals].sort(\r\n      (a, b) => parseFloat(a.distance) - parseFloat(b.distance)\r\n    );\r\n    setSortedHospitals(sorted);\r\n  }, [userLocation]);\r\n\r\n  return (\r\n    <div className=\"Distance-distance-container\">\r\n      <h2 className=\"Distance-h2\">{userLocation}</h2>\r\n      {userLocation === \"User denied the request for Geolocation.\" && (\r\n        <div>\r\n          <p>Please allow location access to use this feature.</p>\r\n          <button onClick={requestPermissionAgain}>\r\n            Request Permission Again\r\n          </button>\r\n        </div>\r\n      )}\r\n      <ul className=\"Distance-hospital-list\">\r\n        {sortedHospitals.map((hospital) => (\r\n          <li\r\n            key={hospital.id}\r\n            className=\"Distance-hospital-item\"\r\n            onClick={() => handleHospitalClick(hospital.dutyId)}\r\n          >\r\n            <span className=\"Distance-hospital-name\">{hospital.name}</span>\r\n            <div className=\"Distance-congestion-info\">\r\n              <span>성인: {hospital.adultpercent}</span>\r\n            </div>\r\n            <div className=\"Distance-congestion-info\">\r\n              <span>소아: {hospital.pediatricpercent}</span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DistanceOrder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}