{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\ManagerLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"./AuthContext\";\nimport \"../css/Login.css\";\nimport axios from \"axios\";\nimport { parseJwt } from \"../utils/JwtUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerLogin = () => {\n  _s();\n  const [mnid, setmnid] = useState(\"\");\n  const [mnpw, setmnpw] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [LoggedIn, setIsLoggedIn] = useState(false);\n  const Navigate = useNavigate();\n  const Auth = useAuth();\n  // Todo: 백 API로 변경하기\n  const BackAPI = \"localhost:8080/manager/signIn\";\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(BackAPI, {\n        mnid: mnid,\n        mnpw: mnpw\n      });\n      if (response.data.success) {\n        const {\n          accessToken\n        } = response.data;\n        const data = parseJwt(accessToken);\n        const user = {\n          data,\n          accessToken\n        };\n        Auth.userLogin(user);\n        setIsLoggedIn(user);\n        if (data.role === 'USER') {\n          alert(\"Log in with your administrator account\");\n          Navigate.push('/Main');\n        }\n        console.log(\"Manager Logged in successfully!\");\n        Navigate.push(\"/AppManager\");\n      } else {\n        setError(response.data.message || \"Manager Login failed\");\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manager Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"ID\",\n      placeholder: \"Id\",\n      value: mnid,\n      onChange: e => setmnid(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: mnpw,\n      onChange: e => setmnpw(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      className: \"login-button\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagerLogin, \"LFGarD7DhX0NPK0XVnR5I44ztU8=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ManagerLogin;\nexport default ManagerLogin;\nvar _c;\n$RefreshReg$(_c, \"ManagerLogin\");","map":{"version":3,"names":["React","useState","Link","useNavigate","styled","useAuth","axios","parseJwt","jsxDEV","_jsxDEV","ManagerLogin","_s","mnid","setmnid","mnpw","setmnpw","error","setError","LoggedIn","setIsLoggedIn","Navigate","Auth","BackAPI","handleLogin","response","post","data","success","accessToken","user","userLogin","role","alert","push","console","log","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/ManagerLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {useAuth} from \"./AuthContext\";\r\nimport \"../css/Login.css\";\r\nimport axios from \"axios\";\r\nimport { parseJwt } from \"../utils/JwtUtils\";\r\n\r\nconst ManagerLogin = () => {\r\n  const [mnid, setmnid] = useState(\"\");\r\n  const [mnpw, setmnpw] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [LoggedIn, setIsLoggedIn] = useState(false);\r\n  const Navigate = useNavigate();\r\n  const Auth = useAuth();\r\n  // Todo: 백 API로 변경하기\r\n  const BackAPI = \"localhost:8080/manager/signIn\";\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post(BackAPI, {\r\n        mnid: mnid,\r\n        mnpw: mnpw,\r\n      });\r\n      if (response.data.success) {\r\n        const {accessToken} = response.data;\r\n        const data = parseJwt(accessToken);\r\n\r\n        const user = {data, accessToken};\r\n        Auth.userLogin(user);\r\n        setIsLoggedIn(user);\r\n\r\n        if(data.role === 'USER') {\r\n            alert(\"Log in with your administrator account\");\r\n            Navigate.push('/Main');\r\n        }\r\n\r\n        console.log(\"Manager Logged in successfully!\");\r\n        Navigate.push(\"/AppManager\");\r\n      } else {\r\n        setError(response.data.message || \"Manager Login failed\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Manager Login</h2>\r\n      <input\r\n        type=\"ID\"\r\n        placeholder=\"Id\"\r\n        value={mnid}\r\n        onChange={(e) => setmnid(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={mnpw}\r\n        onChange={(e) => setmnpw(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} className=\"login-button\">\r\n        Login\r\n      </button>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManagerLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}