{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive - dgu.ac.kr\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uACF5\\uBD80\\\\Spring\\\\ER_SENTINEL_CtrlCV\\\\src\\\\screen\\\\LoginCallbackPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { parseJwt } from \"../utils/JwtUtils\";\nimport { useCookies } from \"react-cookie\";\nimport AuthContext from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginCallBackPage = () => {\n  _s();\n  const Auth = useContext(AuthContext);\n  const [cookie, setCookie] = useCookies(['refreshToken']);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  let accessToken, refreshToken;\n  useEffect(() => {\n    const isLoggedIn = Auth.userIsAuthenticated();\n    setIsLoggedIn(isLoggedIn);\n    accessToken = new URL(window.location.href).searchParams.get(\"accessToken\");\n    refreshToken = new URL(window.location.href).searchParams.get(\"refreshToken\");\n    const data = parseJwt(accessToken);\n\n    // local storage 에 data, access token 저장\n    const user = {\n      data,\n      accessToken\n    };\n    setCookie('refreshToken', refreshToken, {\n      path: '/'\n    });\n    Auth.userLogin(user);\n    setIsLoggedIn(true);\n    console.log(data);\n    window.location.href = \"/\";\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Login Callback Page...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginCallBackPage, \"6w5fBPAvRoiaTwqk9gAv36OQZU0=\", false, function () {\n  return [useCookies];\n});\n_c = LoginCallBackPage;\nexport default LoginCallBackPage;\nvar _c;\n$RefreshReg$(_c, \"LoginCallBackPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","parseJwt","useCookies","AuthContext","jsxDEV","_jsxDEV","LoginCallBackPage","_s","Auth","cookie","setCookie","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","accessToken","refreshToken","userIsAuthenticated","URL","window","location","href","searchParams","get","data","user","path","userLogin","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OneDrive - dgu.ac.kr/바탕 화면/공부/Spring/ER_SENTINEL_CtrlCV/src/screen/LoginCallbackPage.js"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {parseJwt} from \"../utils/JwtUtils\";\r\nimport {useCookies} from \"react-cookie\";\r\nimport AuthContext from \"./AuthContext\";\r\n\r\nconst LoginCallBackPage = () => {\r\n\r\n    const Auth = useContext(AuthContext);\r\n\r\n    const [cookie, setCookie] = useCookies(['refreshToken']);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    let accessToken, refreshToken;\r\n    useEffect(() => {\r\n        const isLoggedIn = Auth.userIsAuthenticated();\r\n        setIsLoggedIn(isLoggedIn);\r\n\r\n        accessToken = new URL(window.location.href).searchParams.get(\"accessToken\")\r\n        refreshToken = new URL(window.location.href).searchParams.get(\"refreshToken\")\r\n\r\n        const data = parseJwt(accessToken);\r\n\r\n        // local storage 에 data, access token 저장\r\n        const user = { data, accessToken };\r\n\r\n        setCookie('refreshToken', refreshToken, {path: '/'});\r\n\r\n        Auth.userLogin(user);\r\n\r\n        setIsLoggedIn(true);\r\n\r\n        console.log(data)\r\n\r\n        window.location.href = \"/\";\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            Login Callback Page...\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginCallBackPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAAQC,QAAQ,QAAO,mBAAmB;AAC1C,SAAQC,UAAU,QAAO,cAAc;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE5B,MAAMC,IAAI,GAAGV,UAAU,CAACK,WAAW,CAAC;EAEpC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGR,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;EACxD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAGnD,IAAIiB,WAAW,EAAEC,YAAY;EAC7BnB,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAGP,IAAI,CAACW,mBAAmB,CAAC,CAAC;IAC7CH,aAAa,CAACD,UAAU,CAAC;IAEzBE,WAAW,GAAG,IAAIG,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,aAAa,CAAC;IAC3EP,YAAY,GAAG,IAAIE,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,CAACC,YAAY,CAACC,GAAG,CAAC,cAAc,CAAC;IAE7E,MAAMC,IAAI,GAAGzB,QAAQ,CAACgB,WAAW,CAAC;;IAElC;IACA,MAAMU,IAAI,GAAG;MAAED,IAAI;MAAET;IAAY,CAAC;IAElCP,SAAS,CAAC,cAAc,EAAEQ,YAAY,EAAE;MAACU,IAAI,EAAE;IAAG,CAAC,CAAC;IAEpDpB,IAAI,CAACqB,SAAS,CAACF,IAAI,CAAC;IAEpBX,aAAa,CAAC,IAAI,CAAC;IAEnBc,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IAEjBL,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IAAA2B,QAAA,EAAK;EAGL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAxCID,iBAAiB;EAAA,QAISJ,UAAU;AAAA;AAAAmC,EAAA,GAJpC/B,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}