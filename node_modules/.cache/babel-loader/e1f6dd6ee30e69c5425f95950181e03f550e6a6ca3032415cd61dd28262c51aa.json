{"ast":null,"code":"var _jsxFileName = \"C:\\\\ers\\\\src\\\\screen\\\\MapOrder.js\",\n  _s = $RefreshSig$();\n/* global kakao */\nimport React, { useEffect } from \"react\";\nimport greenSign from \"../components/greensign.png\";\nimport orangeSign from \"../components/orangesign.png\";\nimport redSign from \"../components/redsign.png\";\nimport yellowSign from \"../components/yellowsign.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleHospitals = [{\n  id: 1,\n  name: \"Hospital 1\",\n  lat: 33.450701,\n  lng: 126.570667,\n  Acongestion: 2\n}, {\n  id: 2,\n  name: \"Hospital 2\",\n  lat: 33.451701,\n  lng: 126.571667,\n  Acongestion: 5\n}, {\n  id: 3,\n  name: \"Hospital 3\",\n  lat: 33.452701,\n  lng: 126.572667,\n  Acongestion: 4\n}\n\n// ... 여기에 추가 병원 데이터를 넣을 수 있습니다.\n];\n\nconst MapOrder = () => {\n  _s();\n  useEffect(() => {\n    // 지도를 표시할 div\n    var mapContainer = document.getElementById('map');\n\n    // 지도의 중심좌표와 확대 레벨\n    var mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n\n    // 지도를 생성합니다\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 병원 데이터를 기반으로 지도에 아이콘을 표시하는 함수\n    const displayHospitalsOnMap = hospitals => {\n      hospitals.forEach(hospital => {\n        const position = new kakao.maps.LatLng(hospital.lat, hospital.lng); // 병원의 위도, 경도\n\n        let iconSrc;\n        if (hospital.Acongestion >= 20) {\n          iconSrc = redSign;\n        } else if (hospital.Acongestion >= 10) {\n          iconSrc = orangeSign;\n        } else if (hospital.Acongestion >= 5) {\n          iconSrc = yellowSign;\n        } else if (hospital.Acongestion >= 0) {\n          iconSrc = greenSign;\n        }\n        const imageSize = new kakao.maps.Size(24, 24);\n        const imageOption = {\n          offset: new kakao.maps.Point(27, 69)\n        };\n        const markerImage = new kakao.maps.MarkerImage(iconSrc, imageSize, imageOption);\n        const marker = new kakao.maps.Marker({\n          position: position,\n          image: markerImage\n        });\n        marker.setMap(map);\n      });\n    };\n    displayHospitalsOnMap(sampleHospitals);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '500px',\n      borderRadius: '10px',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(MapOrder, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapOrder;\nexport default MapOrder;\nvar _c;\n$RefreshReg$(_c, \"MapOrder\");","map":{"version":3,"names":["React","useEffect","greenSign","orangeSign","redSign","yellowSign","jsxDEV","_jsxDEV","sampleHospitals","id","name","lat","lng","Acongestion","MapOrder","_s","mapContainer","document","getElementById","mapOption","center","kakao","maps","LatLng","level","map","Map","displayHospitalsOnMap","hospitals","forEach","hospital","position","iconSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","marker","Marker","image","setMap","style","width","height","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ers/src/screen/MapOrder.js"],"sourcesContent":["/* global kakao */\r\nimport React, { useEffect } from \"react\";\r\nimport greenSign from \"../components/greensign.png\";\r\nimport orangeSign from \"../components/orangesign.png\";\r\nimport redSign from \"../components/redsign.png\";\r\nimport yellowSign from \"../components/yellowsign.png\";\r\n\r\nconst sampleHospitals = [\r\n    {\r\n      id: 1,\r\n      name: \"Hospital 1\",\r\n      lat: 33.450701,\r\n      lng: 126.570667,\r\n      Acongestion: 2\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Hospital 2\",\r\n      lat: 33.451701,\r\n      lng: 126.571667,\r\n      Acongestion: 5\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Hospital 3\",\r\n      lat: 33.452701,\r\n      lng: 126.572667,\r\n      Acongestion: 4\r\n    },\r\n    \r\n    // ... 여기에 추가 병원 데이터를 넣을 수 있습니다.\r\n  ];\r\n\r\n  const MapOrder = () => {\r\n    useEffect(() => {\r\n        // 지도를 표시할 div\r\n        var mapContainer = document.getElementById('map');\r\n        \r\n        // 지도의 중심좌표와 확대 레벨\r\n        var mapOption = {\r\n            center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n            level: 3\r\n        };\r\n\r\n        // 지도를 생성합니다\r\n        var map = new kakao.maps.Map(mapContainer, mapOption);\r\n        \r\n        // 병원 데이터를 기반으로 지도에 아이콘을 표시하는 함수\r\n        const displayHospitalsOnMap = (hospitals) => {\r\n            hospitals.forEach(hospital => {\r\n                const position = new kakao.maps.LatLng(hospital.lat, hospital.lng); // 병원의 위도, 경도\r\n\r\n                let iconSrc;\r\n                if (hospital.Acongestion >= 20) {\r\n                    iconSrc = redSign;\r\n                } else if (hospital.Acongestion >= 10) {\r\n                    iconSrc = orangeSign;\r\n                } else if (hospital.Acongestion >= 5) {\r\n                    iconSrc = yellowSign;\r\n                } else if (hospital.Acongestion >= 0) {\r\n                    iconSrc = greenSign;\r\n                }\r\n\r\n                const imageSize = new kakao.maps.Size(24, 24);\r\n                const imageOption = { offset: new kakao.maps.Point(27, 69) };\r\n                \r\n                const markerImage = new kakao.maps.MarkerImage(iconSrc, imageSize, imageOption);\r\n                const marker = new kakao.maps.Marker({\r\n                    position: position,\r\n                    image: markerImage\r\n                });\r\n                \r\n                marker.setMap(map);\r\n            });\r\n        };\r\n\r\n        displayHospitalsOnMap(sampleHospitals);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"map\" style={{ width: '100%', height: '500px', borderRadius: '10px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)' }}></div>\r\n    );\r\n}\r\n\r\nexport default MapOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}